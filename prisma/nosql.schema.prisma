// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// in order for schema changes to take effect use
// npm run db:migrate

// we're using nestjs-dto generator
// which also created swagger docs
// more options here: https://www.npmjs.com/package/@brakebein/prisma-generator-nestjs-dto

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

// turns out we need both generators
generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma-mongo/prisma/client"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../src"
  outputToNestJsResourceStructure = "true"
  classValidation                 = "true"
  prettier                        = "true"
}

enum OrderStatus {
  NOT_APPROVED
  APPROVED 
  IN_PROGRESS
  DELIVERY
  COMPLETED
  CUSTOMER_CANCELLED
  EMPLOYEE_CANCELLED
}

type ClientType {
  userId String
}

type AddressType {
  street      String
  houseNumber Int
  apartment   Int?
  city        String
  country     String
}

type MenuItemType {
  itemId Int
  name String
  photoUrl String
  description String
  ingredients String
  quantity Int
  price Float
}

model Order {
  /// @DtoReadOnly
  id                    String     @id @default(auto()) @map("_id") @db.ObjectId
  /// @DtoReadOnly
  createdAt DateTime @default(now())
  status OrderStatus @default(NOT_APPROVED)
  client ClientType
  address AddressType
  orderedItems MenuItemType[]
  /// @IsPositive
  totalPrice Float
  /// @IsCurrency
  currency String @default("PLN")
}

model JobApplication {
  id                    String     @id @default(auto()) @map("_id") @db.ObjectId
  firstName             String
  lastName              String
  age                   Int
  email                 String  @unique
  aboutMe               String?
  resumee               String?
  jobTitle              String
  /// @IsPositive
  prefferedSalary       Float
}
