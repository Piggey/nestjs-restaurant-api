// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// in order for schema changes to take effect use
// npm run db:migrate

// we're using nestjs-dto generator
// which also created swagger docs
// more options here: https://www.npmjs.com/package/@brakebein/prisma-generator-nestjs-dto

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

// turns out we need both generators
generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma-mongo/prisma/client"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../src"
  outputToNestJsResourceStructure = "true"
  classValidation                 = "true"
  prettier                        = "true"
  fileNamingStyle                 = "kebab"
}

enum OrderStatus {
  NOT_APPROVED
  APPROVED
  IN_PROGRESS
  DELIVERY
  COMPLETED
  CLIENT_CANCELLED
  EMPLOYEE_CANCELLED
}

enum PaymentMethod {
  CASH
  CARD
}

enum DeliveryMethod {
  SELF_PICKUP
  COURIER
}

type AddressType {
  street      String
  houseNumber String
  apartment   String?
  city        String
  country     String
}

type MenuItemType {
  /// @IsUUID
  itemId      String
  name        String
  photoUrl    String
  description String?
  ingredients String?
  /// @IsPositive
  quantity    Int
  /// @IsPositive
  /// @Min(0.01)
  price       Float
}

model Order {
  /// @DtoReadOnly
  /// @IsMongoId
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  /// @DtoReadOnly
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt()
  status       OrderStatus    @default(NOT_APPROVED)
  deliveryMethod DeliveryMethod
  paymentMethod PaymentMethod
  /// @IsEmail
  userEmail    String
  address      AddressType?
  /// @IsUUID
  restaurantId String
  orderedItems MenuItemType[]
  /// @IsPositive
  totalPrice   Float
  /// @IsCurrency
  currency     String         @default("USD")
}

model JobApplication {
  /// @DtoReadOnly
  /// @IsMongoId
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  /// @DtoReadOnly
  createdAt       DateTime @default(now())
  respondedTo     Boolean  @default(false)
  firstName       String
  lastName        String
  /// @IsPositive
  /// @IsMin(18)
  age             Int
  /// @IsEmail
  email           String   @unique
  aboutMe         String?
  /// @IsPositive({ each: true })
  /// @ArrayMaxSize(16 * 1024 * 1024)
  resumee         Bytes?
  jobTitle        String
  /// @IsPositive
  prefferedSalary Float
}

model FranchiseApplication {
  /// @DtoReadOnly
  /// @IsMongoId
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  /// @DtoReadOnly
  createdAt DateTime @default(now())

  respondedTo      Boolean @default(false)
  firstName        String
  lastName         String
  /// @IsPhoneNumber
  phoneNumber      String
  /// @IsEmail
  email            String
  aboutMe          String
  reasonForOpening String
  /// @IsLongitude
  longitude        Float
  /// @IsLatitude
  latitude         Float
}

model Coupon {
  /// @DtoReadOnly
  /// @IsMongoId
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  /// @DtoReadOnly
  createdAt DateTime @default(now())

  name       String
  code       String  @unique
  /// @IsUUID
  categoryId String?
  /// @DtoReadOnly
  categoryName String?
  /// @Min(0.01)
  /// @Max(1.00)
  discount   Float
  available  Boolean @default(true)
}
